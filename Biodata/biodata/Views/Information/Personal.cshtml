@using biodata.Models
@model Personal

@{
    ViewBag.Title = "Personal";
    Layout = "../Shared/_InformationLayout.cshtml";
}

<h3 class="well well-sm">
    Personal
    <span class="help-block" style="font-size: 11px;">The personal information about the candidate. This information will be displayed in the first row of your biodata.</span>
</h3>

<div class="col-sm-12 well well-sm" style="background-color: whitesmoke; padding: 5px; min-width: 400px;">
    @Html.Partial("_ProgressWizard", new ProgressWizard { Step = 1 })
</div>

<div class="col-sm-12 well well-sm">
    <div class="row">
        @using (Html.BeginForm("Personal", "Information", FormMethod.Post, new { @id = "personalform" }))
        {
            <div class="col-sm-12">
                <div class="text-right text-danger" style="font-size: 12px;">
                    <span class="glyphicon glyphicon-asterisk"></span> Required field
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label>Name of the candidate</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Name, new
                       {
                           type = "text",
                           placeholder = "e.g. - Samir Singh",
                           @class = "form-control",
                           @data_toggle = "tooltip",
                           title = "Enter name of the person who's resume belong to",
                           maxlength = 25
                       })
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        <small class="help-block" style="font-size: 11px;"><i>Name of the person's resume</i></small>
                    </div>
                    <div class="col-sm-3 form-group">
                        <label>Date of birth</label>
                        <div class="input-group">

                            @Html.TextBoxFor(x => x.DateOfBirth, new
                       {
                           type = "text",
                           placeholder = "e.g. - 16-Aug-1987",
                           @class = "form-control",
                           @data_toggle = "tooltip",
                           title = "Enter date of birth"
                       })
                            @*<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span> </span>*@
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        @*<small class="help-block" style="font-size: 11px;"><i>Date of birth of the person's resume</i></small>*@
                    </div>
                    <div class="col-sm-3 form-group">
                        <label>Time of birth</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.TimeOfBirth, new
                       {
                           type = "text",
                           placeholder = "e.g. - 01:56 PM",
                           @class = "form-control",
                           title = "Enter time of birth",
                           data_toggle = "tooltip"
                       })
                            @*<span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>*@
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.TimeOfBirth, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        @*<small class="help-block" style="font-size: 11px;"><i>Time of birth of the person's resume</i></small>*@
                    </div>
                    <div class="col-sm-3 form-group">
                        <label>Height</label>
                        <div class="input-group">
                            @Html.DropDownListFor(x => x.Height, new SelectList(Model.HeightList), "Select Height",
                                new
                                {
                                    id = "height",
                                    @class = "form-control",
                                    data_toggle = "tooltip",
                                    title = "Select Height"
                                })
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        @*<small class="help-block" style="font-size: 11px;"><i>Height of birth of the person's resume</i></small>*@
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label>Birth place</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Birthplace, new
                       {
                           type = "text",
                           placeholder = "e.g. - Bareilly",
                           @class = "form-control",
                           data_toggle = "tooltip",
                           title = "Birth place"
                       })
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Birthplace, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        @*<small class="help-block" style="font-size: 11px;"><i>Birth place of the person's resume</i></small>*@
                    </div>

                    <div class="col-sm-2 form-group">
                        <label>Birth state</label>
                        @*<div class="input-group">*@
                            @Html.TextBoxFor(x => x.Birthstate, new
                       {
                           type = "text",
                           placeholder = "e.g. - U.P",
                           @class = "form-control",
                           data_toggle = "tooltip",
                           title = "Birth state"
                       })
                            @*<span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Birthstate, "", new { @class = "text-danger", style = "font-size: 12px;" })*@
                        @*<small class="help-block" style="font-size: 11px;"><i>Birth state of the person's resume</i></small>*@
                    </div>

                    <div class="col-sm-3 form-group">
                        <label>Complexion</label>
                        <div class="input-group">
                            @Html.DropDownListFor(x => x.Complexion, new SelectList(Model.ComplexionList), "Select Complexion",
                                new
                                {
                                    id = "complexion",
                                    @class = "form-control",
                                    data_toggle = "tooltip",
                                    title = "Select complexion"
                                })
                            <span class="input-group-addon "><span class="glyphicon glyphicon-asterisk text-danger"></span></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Complexion, "", new { @class = "text-danger", style = "font-size: 12px;" })
                        @*<small class="help-block" style="font-size: 11px;"><i>Complexion of the person's resume</i></small>*@
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Current City</label>
                        @Html.TextBoxFor(x => x.CurrentCity, new { type = "text", placeholder = "e.g. - Bangalore", @class = "form-control" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Current State</label>
                        @Html.TextBoxFor(x => x.CurrentState, new { type = "text", placeholder = "e.g. - Karnataka", @class = "form-control" })
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label>Marital Status</label>
                        @Html.DropDownListFor(x => x.MaritalStatus, new SelectList(Model.MaritalStatusList), "Select Marital Status",
                            new
                            {
                                id = "maritalstatus",
                                @class = "form-control",
                                data_toggle = "tooltip",
                                title = "Select Marital Status"
                            })
                        @Html.ValidationMessageFor(m => m.MaritalStatus, "", new { @class = "text-danger", style = "font-size: 12px;" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Diet</label>
                        @Html.DropDownListFor(x => x.Diet, new SelectList(Model.DietList), "Select Diet",
                            new
                            {
                                id = "diet",
                                @class = "form-control",
                                data_toggle = "tooltip",
                                title = "Select diet"
                            })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Drink</label>
                        @Html.DropDownListFor(x => x.Drink, new SelectList(Model.DrinkList), "Select Drink",
                            new
                            {
                                id = "drink",
                                @class = "form-control",
                                data_toggle = "tooltip",
                                title = "Select drink"
                            })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Smoke</label>
                        @Html.DropDownListFor(x => x.Smoke, new SelectList(Model.SmokeList), "Select Smoke",
                            new
                            {
                                id = "smoke",
                                @class = "form-control",
                                data_toggle = "tooltip",
                                title = "Select Smoke"
                            })
                    </div>

                    <div class="col-sm-3 form-group">
                        <label>Hobbies</label>
                        @Html.TextBoxFor(x => x.Hobbies, new { type = "text", placeholder = "e.g. - Cooking, Movies", @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3 form-group">
                        <label>Facebook</label>
                        @Html.TextBoxFor(x => x.Facebook, new { type = "text", placeholder = "e.g. - https://www.facebook.com/yourprofile", @class = "form-control" })
                    </div>
                    <div class="col-sm-3 form-group">
                        <label>Linkedin</label>
                        @Html.TextBoxFor(x => x.Linkedin, new { type = "text", placeholder = "e.g. - https://www.linkedin/yourprofile", @class = "form-control" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Instagram</label>
                        @Html.TextBoxFor(x => x.Instagram, new { type = "text", placeholder = "e.g. - https://www.intagram/yourprofile", @class = "form-control" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Twitter</label>
                        @Html.TextBoxFor(x => x.Twitter, new { type = "text", placeholder = "e.g. - https://www.twitter.com/yourprofile", @class = "form-control" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label>Quora</label>
                        @Html.TextBoxFor(x => x.Quora, new { type = "text", placeholder = "e.g. - https://www.quora.com/yourprofile", @class = "form-control" })
                    </div>
                </div>

                @*<div class="row">
                    <div class="col-lg-12 form-group">
                        <label>About me</label>
                        @Html.TextBoxFor(x => x.Quora, new { type = "text", placeholder = "", @class = "form-control" })
                    </div>
                </div>*@

                @*@Html.ActionLink("Back", "Contact", "Information", new { }, new { @class = "btn btn-default pull-left" })*@

                <button type="submit" class="btn btn-primary pull-right">Save & Continue</button>
            </div>
        }
    </div>
</div>

@section Scripts
{
    <script>
        $(function () {
            $('#DateOfBirth')
                .datetimepicker({
                    format: 'D-MMM-YYYY'
                });

            $('#TimeOfBirth')
                .datetimepicker({
                    format: 'LT'
                });

            $("button[type=submit]").click(function () {
                $(this).data('clicked', true);
            });

            $('#personalform').data('serialize', $('#personalform').serialize()); // On load save form current state

            $(window).bind('beforeunload', function (e) {
                if ($('#personalform').serialize() !== $('#personalform').data('serialize') && !$('button[type=submit]').data('clicked')) return true;
                else e = null; // i.e; if form state change show warning box, else don't show it.
            });

            function preventBack() { window.history.forward(); }
            setTimeout("preventBack()", 10);
            window.onunload = function () { null };

        });
    </script>
}